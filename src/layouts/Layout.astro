---
import { Image } from 'astro:assets';
import "../assets/styles/global.css";
import "../assets/font-awesome/css/fontawesome.css";
import "../assets/font-awesome/css/solid.css";
import "../assets/font-awesome/css/brands.css";
import profileImage from "../assets/images/wanrick.png";
import bgLight from "../assets/images/bg-light.svg";
import bgDark from "../assets/images/bg-dark.svg";
import ThemeSwitcher from "../components/ThemeSwitcher.astro";

interface Props {
	title: string;
}

const {title} = Astro.props;
const headingSize = title.length > 20 ? "text-2xl" : "text-5xl";
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="description" content="Astro description"/>
		<meta name="generator" content={Astro.generator}/>
		<link rel="icon" href="/favicon/favicon.ico" sizes="32x32">
		<link rel="icon" href="/favicon/icon.svg" type="image/svg+xml">
		<link rel="apple-touch-icon" href="/favicon/apple-touch-icon.png">
		<title>Wanrick Dev - {title}</title>
		<script is:inline>
			if (localStorage.getItem("theme") === null) {
				if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
					document.documentElement.setAttribute("data-theme", "dim");
				} else {
					document.documentElement.setAttribute("data-theme", "cupcake");
				}
			} else {
				document.documentElement.setAttribute(
					"data-theme",
					localStorage.getItem("theme")
				);
			}
			window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
				event.matches ? setDarkTheme() : setLightTheme();
			});
			const setDarkTheme = () => {
				document.documentElement.setAttribute("data-theme", "dim");
				localStorage.setItem("theme", "dim");
			};
			const setLightTheme = () => {
				document.documentElement.setAttribute("data-theme", "cupcake");
				localStorage.setItem("theme", "cupcake");
			};
		</script>
	</head>
	<body id="body">
		<div class="size-full max-h-full grid grid-cols-4 grid-rows-8">
			<div class="col-span-1 row-span-7 col-start-1 row-start-1 flex flex-col justify-center items-center bg-primary">
				<div class="avatar">
					<div class="w-48 rounded-full">
						<Image src={profileImage} alt="A pixelated image of my face" />
					</div>
				</div>
				<h1 class="text-2xl font-header text-primary-content">Who am I?</h1>
				<p class="text-lg font-body m-4 text-primary-content">
					I'm a software developer who works primarily with Microsoft technologies.
					Feel free to reach out to me on either:
				</p>
				<div>
					<button class="btn bg bg-primary-content text-primary rounded-4xl border-none">
						<i class="fa-brands fa-github-square text-xl"></i>
						Github
					</button>
					<button class="btn bg-primary-content text-primary rounded-4xl border-none">
						<i class="fa-brands fa-linkedin text-xl"></i>
						LinkedIn
					</button>
				</div>
			</div>
			<div class="col-span-1 row-span-1 col-start-1 row-start-8 size-full flex justify-center items-center bg-primary">
				<ThemeSwitcher isDark />
			</div>
			<div class="col-span-3 row-span-1 p-8 pb-0">
				<div class={"inline p-4 bg-primary text-primary-content rounded font-header fixed " + headingSize}>{title}.</div>
			</div>
			<div id="scroll-content" class="col-span-3 row-span-7 p-8 pt-0 overflow-scroll">
				<slot />
			</div>
			<button id="scroll-top-btn" class="btn btn-circle absolute w-16 h-16 bottom-8 right-8 bg-primary-content text-primary hidden">
				<i class="fa-solid fa-arrow-up text-2xl"></i>
			</button>
		</div>
	</body>
</html>

<script>
	const scrollContent = document.getElementById('scroll-content');
	const scrollButton = document.getElementById('scroll-top-btn');

	if (!scrollContent || !scrollButton) {
		throw new Error('Could not find scroll content or scroll button');
	}

	const scrollFunction = () => {
		if (
			scrollContent.scrollTop > 20
		) {
			scrollButton.classList.remove("hidden");
		} else {
			scrollButton.classList.add("hidden");
		}
	};

	const backToTop = () => {
		scrollContent.scrollTo({ top: 0, behavior: 'smooth' });
	};

	scrollButton.addEventListener("click", backToTop);
	scrollContent.addEventListener("scroll", scrollFunction);
</script>
